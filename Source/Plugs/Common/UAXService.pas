unit UAXService;

{----------------------------------------------------------------------------}
{ This unit was automatically generated by the RemObjects SDK after reading  }
{ the RODL file associated with this project .                               }
{                                                                            }
{ Do not modify this unit manually, or your changes will be lost when this   }
{ unit is regenerated the next time you compile the project.                 }
{----------------------------------------------------------------------------}

{$I RemObjects.inc}

interface

uses
  {vcl:} Classes, TypInfo,
  {RemObjects:} uROXMLIntf, uROClasses, uROClient, uROTypes, uROClientIntf;

const
  { Library ID }
  LibraryUID = '{DEC83AEE-0A51-4219-AAD6-1C1CA8BA0A80}';
  WSDLLocation = 'http://10.9.1.97/CardTransToERP/webService.asmx?WSDL';
  TargetNamespace = 'http://tempuri.org/';

  { Service Interface ID's }
  IWebService_IID : TGUID = '{AD5958C7-B3C1-420E-BBF2-7C7A3E46E090}';
  WebService_EndPointURI = 'http://10.9.1.97/CardTransToERP/webService.asmx';

  { Event ID's }

type
  { Forward declarations }
  IWebService = interface;


  { IWebService }
  IWebService = interface
    ['{AD5958C7-B3C1-420E-BBF2-7C7A3E46E090}']
    function HelloWorld: WideString;
    function test: WideString;
    function GetSalesInfoByCustCard(const _cardnum: WideString): WideString;
    function CheckPassByQtyAmount(const _xml: WideString): WideString;
    function SetSalesPackingSlip(const _xml: WideString): WideString;
    function SetPurchPackingSlip(const _xml: WideString): WideString;
  end;

  { CoWebService }
  CoWebService = class
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IWebService;
  end;

  { TWebService_Proxy }
  TWebService_Proxy = class(TROProxy, IWebService)
  protected
    function __GetInterfaceName:string; override;

    function HelloWorld: WideString;
    function test: WideString;
    function GetSalesInfoByCustCard(const _cardnum: WideString): WideString;
    function CheckPassByQtyAmount(const _xml: WideString): WideString;
    function SetSalesPackingSlip(const _xml: WideString): WideString;
    function SetPurchPackingSlip(const _xml: WideString): WideString;
  end;

implementation

uses
  {vcl:} SysUtils,
  {RemObjects:} uROEventRepository, uROSerializer, uRORes;

{ CoWebService }

class function CoWebService.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IWebService;
begin
  result := TWebService_Proxy.Create(aMessage, aTransportChannel);
end;

{ TWebService_Proxy }

function TWebService_Proxy.__GetInterfaceName:string;
begin
  result := 'WebService';
end;

function TWebService_Proxy.HelloWorld: WideString;
begin
    __Message.SetAttributes(__TransportChannel, ['Action', 'Location', 'remap_CheckPassByQtyAmount', 'remap_GetSalesInfoByCustCard', 'remap_HelloWorld', 'remap_SetPurchPackingSlip', 'remap_SetSalesPackingSlip'
      , 'remap_test', 'SOAPInputNameOverride', 'SOAPOutputNameOverride', 'Style', 'TargetNamespace', 'Type', 'Use', 'Wsdl'], 
      ['http://tempuri.org/HelloWorld', 'http://10.9.1.97/CardTransToERP/webService.asmx', 'http://tempuri.org/CheckPassByQtyAmount', 'http://tempuri.org/GetSalesInfoByCustCard', 'http://tempuri.org/HelloWorld', 'http://tempuri.org/SetPurchPackingSlip', 'http://tempuri.org/SetSalesPackingSlip'
      , 'http://tempuri.org/test', 'HelloWorld', 'HelloWorldResponse', 'document', TargetNamespace, 'SOAP', 'literal', WSDLLocation]);
  try
    __Message.InitializeRequestMessage(__TransportChannel, 'NewLibrary', __InterfaceName, 'HelloWorld');
    __Message.Finalize;

    __TransportChannel.Dispatch(__Message);

    __Message.Read('HelloWorldResult', TypeInfo(WideString), result, []);
  finally
    __Message.UnsetAttributes(__TransportChannel);
    __Message.FreeStream;
  end
end;

function TWebService_Proxy.test: WideString;
begin
    __Message.SetAttributes(__TransportChannel, ['Action', 'Location', 'remap_CheckPassByQtyAmount', 'remap_GetSalesInfoByCustCard', 'remap_HelloWorld', 'remap_SetPurchPackingSlip', 'remap_SetSalesPackingSlip'
      , 'remap_test', 'SOAPInputNameOverride', 'SOAPOutputNameOverride', 'Style', 'TargetNamespace', 'Type', 'Use', 'Wsdl'], 
      ['http://tempuri.org/test', 'http://10.9.1.97/CardTransToERP/webService.asmx', 'http://tempuri.org/CheckPassByQtyAmount', 'http://tempuri.org/GetSalesInfoByCustCard', 'http://tempuri.org/HelloWorld', 'http://tempuri.org/SetPurchPackingSlip', 'http://tempuri.org/SetSalesPackingSlip'
      , 'http://tempuri.org/test', 'test', 'testResponse', 'document', TargetNamespace, 'SOAP', 'literal', WSDLLocation]);
  try
    __Message.InitializeRequestMessage(__TransportChannel, 'NewLibrary', __InterfaceName, 'test');
    __Message.Finalize;

    __TransportChannel.Dispatch(__Message);

    __Message.Read('testResult', TypeInfo(WideString), result, []);
  finally
    __Message.UnsetAttributes(__TransportChannel);
    __Message.FreeStream;
  end
end;

function TWebService_Proxy.GetSalesInfoByCustCard(const _cardnum: WideString): WideString;
begin
    __Message.SetAttributes(__TransportChannel, ['Action', 'Location', 'remap_CheckPassByQtyAmount', 'remap_GetSalesInfoByCustCard', 'remap_HelloWorld', 'remap_SetPurchPackingSlip', 'remap_SetSalesPackingSlip'
      , 'remap_test', 'SOAPInputNameOverride', 'SOAPOutputNameOverride', 'Style', 'TargetNamespace', 'Type', 'Use', 'Wsdl'], 
      ['http://tempuri.org/GetSalesInfoByCustCard', 'http://10.9.1.97/CardTransToERP/webService.asmx', 'http://tempuri.org/CheckPassByQtyAmount', 'http://tempuri.org/GetSalesInfoByCustCard', 'http://tempuri.org/HelloWorld', 'http://tempuri.org/SetPurchPackingSlip', 'http://tempuri.org/SetSalesPackingSlip'
      , 'http://tempuri.org/test', 'GetSalesInfoByCustCard', 'GetSalesInfoByCustCardResponse', 'document', TargetNamespace, 'SOAP', 'literal', WSDLLocation]);
  try
    __Message.InitializeRequestMessage(__TransportChannel, 'NewLibrary', __InterfaceName, 'GetSalesInfoByCustCard');
    __Message.Write('_cardnum', TypeInfo(WideString), _cardnum, []);
    __Message.Finalize;

    __TransportChannel.Dispatch(__Message);

    __Message.Read('GetSalesInfoByCustCardResult', TypeInfo(WideString), result, []);
  finally
    __Message.UnsetAttributes(__TransportChannel);
    __Message.FreeStream;
  end
end;

function TWebService_Proxy.CheckPassByQtyAmount(const _xml: WideString): WideString;
begin
    __Message.SetAttributes(__TransportChannel, ['Action', 'Location', 'remap_CheckPassByQtyAmount', 'remap_GetSalesInfoByCustCard', 'remap_HelloWorld', 'remap_SetPurchPackingSlip', 'remap_SetSalesPackingSlip'
      , 'remap_test', 'SOAPInputNameOverride', 'SOAPOutputNameOverride', 'Style', 'TargetNamespace', 'Type', 'Use', 'Wsdl'], 
      ['http://tempuri.org/CheckPassByQtyAmount', 'http://10.9.1.97/CardTransToERP/webService.asmx', 'http://tempuri.org/CheckPassByQtyAmount', 'http://tempuri.org/GetSalesInfoByCustCard', 'http://tempuri.org/HelloWorld', 'http://tempuri.org/SetPurchPackingSlip', 'http://tempuri.org/SetSalesPackingSlip'
      , 'http://tempuri.org/test', 'CheckPassByQtyAmount', 'CheckPassByQtyAmountResponse', 'document', TargetNamespace, 'SOAP', 'literal', WSDLLocation]);
  try
    __Message.InitializeRequestMessage(__TransportChannel, 'NewLibrary', __InterfaceName, 'CheckPassByQtyAmount');
    __Message.Write('_xml', TypeInfo(WideString), _xml, []);
    __Message.Finalize;

    __TransportChannel.Dispatch(__Message);

    __Message.Read('CheckPassByQtyAmountResult', TypeInfo(WideString), result, []);
  finally
    __Message.UnsetAttributes(__TransportChannel);
    __Message.FreeStream;
  end
end;

function TWebService_Proxy.SetSalesPackingSlip(const _xml: WideString): WideString;
begin
    __Message.SetAttributes(__TransportChannel, ['Action', 'Location', 'remap_CheckPassByQtyAmount', 'remap_GetSalesInfoByCustCard', 'remap_HelloWorld', 'remap_SetPurchPackingSlip', 'remap_SetSalesPackingSlip'
      , 'remap_test', 'SOAPInputNameOverride', 'SOAPOutputNameOverride', 'Style', 'TargetNamespace', 'Type', 'Use', 'Wsdl'], 
      ['http://tempuri.org/SetSalesPackingSlip', 'http://10.9.1.97/CardTransToERP/webService.asmx', 'http://tempuri.org/CheckPassByQtyAmount', 'http://tempuri.org/GetSalesInfoByCustCard', 'http://tempuri.org/HelloWorld', 'http://tempuri.org/SetPurchPackingSlip', 'http://tempuri.org/SetSalesPackingSlip'
      , 'http://tempuri.org/test', 'SetSalesPackingSlip', 'SetSalesPackingSlipResponse', 'document', TargetNamespace, 'SOAP', 'literal', WSDLLocation]);
  try
    __Message.InitializeRequestMessage(__TransportChannel, 'NewLibrary', __InterfaceName, 'SetSalesPackingSlip');
    __Message.Write('_xml', TypeInfo(WideString), _xml, []);
    __Message.Finalize;

    __TransportChannel.Dispatch(__Message);

    __Message.Read('SetSalesPackingSlipResult', TypeInfo(WideString), result, []);
  finally
    __Message.UnsetAttributes(__TransportChannel);
    __Message.FreeStream;
  end
end;

function TWebService_Proxy.SetPurchPackingSlip(const _xml: WideString): WideString;
begin
    __Message.SetAttributes(__TransportChannel, ['Action', 'Location', 'remap_CheckPassByQtyAmount', 'remap_GetSalesInfoByCustCard', 'remap_HelloWorld', 'remap_SetPurchPackingSlip', 'remap_SetSalesPackingSlip'
      , 'remap_test', 'SOAPInputNameOverride', 'SOAPOutputNameOverride', 'Style', 'TargetNamespace', 'Type', 'Use', 'Wsdl'], 
      ['http://tempuri.org/SetPurchPackingSlip', 'http://10.9.1.97/CardTransToERP/webService.asmx', 'http://tempuri.org/CheckPassByQtyAmount', 'http://tempuri.org/GetSalesInfoByCustCard', 'http://tempuri.org/HelloWorld', 'http://tempuri.org/SetPurchPackingSlip', 'http://tempuri.org/SetSalesPackingSlip'
      , 'http://tempuri.org/test', 'SetPurchPackingSlip', 'SetPurchPackingSlipResponse', 'document', TargetNamespace, 'SOAP', 'literal', WSDLLocation]);
  try
    __Message.InitializeRequestMessage(__TransportChannel, 'NewLibrary', __InterfaceName, 'SetPurchPackingSlip');
    __Message.Write('_xml', TypeInfo(WideString), _xml, []);
    __Message.Finalize;

    __TransportChannel.Dispatch(__Message);

    __Message.Read('SetPurchPackingSlipResult', TypeInfo(WideString), result, []);
  finally
    __Message.UnsetAttributes(__TransportChannel);
    __Message.FreeStream;
  end
end;

initialization
  RegisterProxyClass(IWebService_IID, TWebService_Proxy);


finalization
  UnregisterProxyClass(IWebService_IID);

end.
